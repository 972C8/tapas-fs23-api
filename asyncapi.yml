asyncapi: '2.6.0'
id: urn:unisg:ch:tapas:f23-api-mqtt
defaultContentType: application/json
info:
  title: TAPAS API MQTT
  version: 1.0.0
  description: Interoperability standard for MQTT communication of the TAPAS project.
  contact:
    name: Marco Kaufmann
    url: https://github.com/mahgoh/
    email: marco.kaufmann@student.unisg.ch
  license:
    name: MIT
    url: https://opensource.org/license/mit/
servers:
  development:
    url: localhost
    description: "Development broker"
    protocol: mqtt
    protocolVersion: '3.1.1'
  production:
    url: broker.hivemq.com
    description: "Production broker"
    protocol: mqtt
    protocolVersion: '3.1.1'
channels:
  ch/unisg/tapas/auctions:
    subscribe:
      summary: Subscribe to auction
      message:
        $ref: '#/components/messages/Auction'
    publish:
      summary: Publish auction
      message:
        $ref: '#/components/messages/Auction'
  ch/unisg/tapas/auctions/{groupId}/{auctionId}:
    parameters:
      groupId:
        $ref: '#/components/parameters/groupId'
      auctionId:
        $ref: '#/components/parameters/auctionId'
    subscribe:
      summary: Receive Bid
      message:
        $ref: '#/components/messages/Bid'
    publish:
      summary: Place Bid
      message:
        $ref: '#/components/messages/Bid'
components:
  parameters:
    auctionId:
      schema:
        $ref: '#/components/schemas/auctionId'
    groupId:
      schema:
        $ref: '#/components/schemas/groupId'
  schemas:
    auctionId:
      type: string
      description: "Identifier of the auction. Should be globally unique"
    groupId:
      type: string
      description: "Identifier of the group. `group` followed by the number of the group, e.g., for group 1 the groupId is `group1`."
  messages:
    Auction:
      name: Auction
      payload:
        type: object
        properties:
          auctionId:
            $ref: '#/components/schemas/auctionId'
          auctionHouseUri:
            type: string
            description: "The URI of an auction house"
          taskUri:
            type: string
            description: "The URI of the corresponding task"
          taskType:
            type: string
            description: "The type of the corresponding task"
          deadline:
            type: integer
            description: "The deadline of the auction in ms after auction start. (e.g., 10'000 means 10s after the start of the auction)"
          status:
            type: string
            enum:
            - OPEN
            - CLOSED
            description: "The status of the auction"
        example:
          auctionId: 7e7dd748-c633-4123-a5e4-0eda9de8404c
          auctionHouseUri: https://tapas-auction-house.86-119-34-23.asse.scs.unisg.ch/
          taskUri: https://tapas-tasks.86-119-34-23.asse.scs.unisg.ch/
          taskType: BADMINTON
          deadline: 10000
          status: OPEN
    Bid:
      name: Bid
      payload:
        type: object
        properties:
          auctionId:
            $ref: '#/components/schemas/auctionId'
          bidderName:
            type: string
            description: "Represents the external entity's name"
          bidderAuctionHouseUri:
            type: string
            description: "The URI of the bidder's auction house"
          bidderTaskListUri:
            type: string
            description: "The URI of the bidder's task list"
        example:
          auctionId: 7e7dd748-c633-4123-a5e4-0eda9de8404c
          bidderName: group1
          bidderAuctionHouseUri: https://tapas-auction-house.86-119-34-23.asse.scs.unisg.ch/
          bidderTaskListUri: https://tapas-tasks.86-119-34-23.asse.scs.unisg.ch/

